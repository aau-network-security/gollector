version: '2.4'
services:
  cache:
    container_name: gollector-cache
    build:
      context: .
      dockerfile: app/cache/Dockerfile
    command: [ "--config", "/config/cache.yml" ]
    volumes:
      - ./config:/config:ro # configuration files
    ports:
      - "${GRPC_PORT}:${GRPC_PORT}"
  entrada:
    container_name: gollector-entrada
    build:
      context: .
      dockerfile: app/entrada/Dockerfile
    command: [ "--config", "/config/entrada.yml" ]
    volumes:
      - ./config:/config:ro # configuration files
  zones:
    container_name: gollector-zones
    build:
      context: .
      dockerfile: app/zones/Dockerfile
    command: [ "--config", "/config/zones.yml" ]
    environment:
      - COM_FTP_PASS=${COM_FTP_PASS}
      - CZDS_PASS=${CZDS_PASS}
      - DK_SSH_PASS=${DK_SSH_PASS}
    volumes:
      - ./config:/config:ro # configuration files
      - ${SSH_DIR}:/ssh:ro  # ssh keys
  ct:
    container_name: gollector-ct
    build:
      context: .
      dockerfile: app/ct/Dockerfile
    command: [ "--config", "/config/ct.yml", "-logtostderr" ]
    volumes:
      - ./config:/config:ro # configuration files
  splunk:
    container_name: gollector-splunk
    build:
      context: .
      dockerfile: app/splunk/Dockerfile
    command: [ "--config", "/config/splunk.yml", "-logtostderr" ]
    volumes:
      - ./config:/config:ro # configuration files
      - ${SPLUNK_DIR}:/splunk # directory containing Splunk JSON logs
  db:
    container_name: gollector-db
    image: postgres
    restart: always
    environment:
      POSTGRES_PASSWORD: ${POSTGRES_PASS?err}
    volumes:
      - ./db:/docker-entrypoint-initdb.d      # initialization scripts, only executed first time
      - ${DB_VOLUME?err}:/var/lib/postgresql/data # persistent storage of database
    ports:
      - "${POSTGRES_HOST?err}:${POSTGRES_PORT?err}:5432"
