version: '2.4'
services:
  cache:
    container_name: gollector-cache
    build:
      context: .
      dockerfile: app/cache/Dockerfile
    command: [ "--config", "/config/cache.yml" ]
    volumes:
      - ./config:/config:ro # configuration files
      - ./output:/output:rw
    ports:
      - "${GRPC_PORT}:${GRPC_PORT}"
      - "8881:8881"
    networks:
      - gollector
#   entrada:
#     container_name: gollector-entrada
#     build:
#       context: .
#       dockerfile: app/entrada/Dockerfile
#     command: [ "--config", "/config/entrada.yml" ]
#     volumes:
#       - ./config:/config:ro # configuration files
#   zones:
#     container_name: gollector-zones
#     build:
#       context: .
#       dockerfile: app/zones/Dockerfile
#     command: [ "--config", "/config/zones.yml" ]
#     environment:
#       - COM_FTP_PASS=${COM_FTP_PASS}
#       - CZDS_PASS=${CZDS_PASS}
#       - DK_SSH_PASS=${DK_SSH_PASS}
#     volumes:
#       - ./config:/config:ro # configuration files
#       - ${SSH_DIR}:/ssh:ro  # ssh keys
  ct:
    container_name: gollector-ct
    build:
      context: .
      dockerfile: app/ct/Dockerfile
    command: [ "--config", "/config/ct.yml", "-logtostderr" ]
    volumes:
      - ./config:/config:ro # configuration files
    networks:
      - gollector
#   splunk:
#     container_name: gollector-splunk
#     build:
#       context: .
#       dockerfile: app/splunk/Dockerfile
#     command: [ "--config", "/config/splunk.yml", "-logtostderr" ]
#     volumes:
#       - ./config:/config:ro # configuration files
#       - ${SPLUNK_DIR}:/splunk # directory containing Splunk JSON logs
  db:
    container_name: gollector-db
    image: postgres
    restart: always
    environment:
      POSTGRES_PASSWORD: ${POSTGRES_PASS?err}
    volumes:
      - ./db:/docker-entrypoint-initdb.d      # initialization scripts, only executed first time
      - ${DB_VOLUME?err}:/var/lib/postgresql/data # persistent storage of database
    ports:
      - "${POSTGRES_HOST?err}:${POSTGRES_PORT?err}:5432"
    networks:
      - gollector

  cassandra:
    container_name: gollector-cassandra
    image: cassandra:3.11.6
    volumes:
      - "./db/cassandra-init.sh:/cassandra-init.sh"
#     - "./db/cassandra-env.sh:/etc/cassandra/cassandra-env.sh"
      - ${CASSANDRA_VOLUME?err}:/var/lib/cassandra # persistent storage of database
    command: "sh /cassandra-init.sh"
    ports:
      - "9042:9042"
    networks:
      - gollector

# docker network create --subnet "10.13.20.0/24" gollector
networks:
  gollector:
    external:
      name: gollector