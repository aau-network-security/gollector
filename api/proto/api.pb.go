// Code generated by protoc-gen-go. DO NOT EDIT.
// source: api.proto

package api

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Empty struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Empty) Reset()         { *m = Empty{} }
func (m *Empty) String() string { return proto.CompactTextString(m) }
func (*Empty) ProtoMessage()    {}
func (*Empty) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{0}
}

func (m *Empty) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Empty.Unmarshal(m, b)
}
func (m *Empty) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Empty.Marshal(b, m, deterministic)
}
func (m *Empty) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Empty.Merge(m, src)
}
func (m *Empty) XXX_Size() int {
	return xxx_messageInfo_Empty.Size(m)
}
func (m *Empty) XXX_DiscardUnknown() {
	xxx_messageInfo_Empty.DiscardUnknown(m)
}

var xxx_messageInfo_Empty proto.InternalMessageInfo

type StartMeasurementResponse struct {
	MeasurementId        *MeasurementId `protobuf:"bytes,1,opt,name=MeasurementId,proto3" json:"MeasurementId,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *StartMeasurementResponse) Reset()         { *m = StartMeasurementResponse{} }
func (m *StartMeasurementResponse) String() string { return proto.CompactTextString(m) }
func (*StartMeasurementResponse) ProtoMessage()    {}
func (*StartMeasurementResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{1}
}

func (m *StartMeasurementResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StartMeasurementResponse.Unmarshal(m, b)
}
func (m *StartMeasurementResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StartMeasurementResponse.Marshal(b, m, deterministic)
}
func (m *StartMeasurementResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StartMeasurementResponse.Merge(m, src)
}
func (m *StartMeasurementResponse) XXX_Size() int {
	return xxx_messageInfo_StartMeasurementResponse.Size(m)
}
func (m *StartMeasurementResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_StartMeasurementResponse.DiscardUnknown(m)
}

var xxx_messageInfo_StartMeasurementResponse proto.InternalMessageInfo

func (m *StartMeasurementResponse) GetMeasurementId() *MeasurementId {
	if m != nil {
		return m.MeasurementId
	}
	return nil
}

type Meta struct {
	Description          string   `protobuf:"bytes,1,opt,name=Description,proto3" json:"Description,omitempty"`
	Host                 string   `protobuf:"bytes,2,opt,name=Host,proto3" json:"Host,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Meta) Reset()         { *m = Meta{} }
func (m *Meta) String() string { return proto.CompactTextString(m) }
func (*Meta) ProtoMessage()    {}
func (*Meta) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{2}
}

func (m *Meta) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Meta.Unmarshal(m, b)
}
func (m *Meta) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Meta.Marshal(b, m, deterministic)
}
func (m *Meta) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Meta.Merge(m, src)
}
func (m *Meta) XXX_Size() int {
	return xxx_messageInfo_Meta.Size(m)
}
func (m *Meta) XXX_DiscardUnknown() {
	xxx_messageInfo_Meta.DiscardUnknown(m)
}

var xxx_messageInfo_Meta proto.InternalMessageInfo

func (m *Meta) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *Meta) GetHost() string {
	if m != nil {
		return m.Host
	}
	return ""
}

type MeasurementId struct {
	Id                   string   `protobuf:"bytes,1,opt,name=Id,proto3" json:"Id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MeasurementId) Reset()         { *m = MeasurementId{} }
func (m *MeasurementId) String() string { return proto.CompactTextString(m) }
func (*MeasurementId) ProtoMessage()    {}
func (*MeasurementId) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{3}
}

func (m *MeasurementId) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MeasurementId.Unmarshal(m, b)
}
func (m *MeasurementId) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MeasurementId.Marshal(b, m, deterministic)
}
func (m *MeasurementId) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MeasurementId.Merge(m, src)
}
func (m *MeasurementId) XXX_Size() int {
	return xxx_messageInfo_MeasurementId.Size(m)
}
func (m *MeasurementId) XXX_DiscardUnknown() {
	xxx_messageInfo_MeasurementId.DiscardUnknown(m)
}

var xxx_messageInfo_MeasurementId proto.InternalMessageInfo

func (m *MeasurementId) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

type LogEntry struct {
	Certificate          []byte   `protobuf:"bytes,1,opt,name=Certificate,proto3" json:"Certificate,omitempty"`
	Index                int64    `protobuf:"varint,2,opt,name=Index,proto3" json:"Index,omitempty"`
	Timestamp            int64    `protobuf:"varint,3,opt,name=Timestamp,proto3" json:"Timestamp,omitempty"`
	Log                  *Log     `protobuf:"bytes,4,opt,name=Log,proto3" json:"Log,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *LogEntry) Reset()         { *m = LogEntry{} }
func (m *LogEntry) String() string { return proto.CompactTextString(m) }
func (*LogEntry) ProtoMessage()    {}
func (*LogEntry) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{4}
}

func (m *LogEntry) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LogEntry.Unmarshal(m, b)
}
func (m *LogEntry) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LogEntry.Marshal(b, m, deterministic)
}
func (m *LogEntry) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LogEntry.Merge(m, src)
}
func (m *LogEntry) XXX_Size() int {
	return xxx_messageInfo_LogEntry.Size(m)
}
func (m *LogEntry) XXX_DiscardUnknown() {
	xxx_messageInfo_LogEntry.DiscardUnknown(m)
}

var xxx_messageInfo_LogEntry proto.InternalMessageInfo

func (m *LogEntry) GetCertificate() []byte {
	if m != nil {
		return m.Certificate
	}
	return nil
}

func (m *LogEntry) GetIndex() int64 {
	if m != nil {
		return m.Index
	}
	return 0
}

func (m *LogEntry) GetTimestamp() int64 {
	if m != nil {
		return m.Timestamp
	}
	return 0
}

func (m *LogEntry) GetLog() *Log {
	if m != nil {
		return m.Log
	}
	return nil
}

type Log struct {
	Description          string   `protobuf:"bytes,1,opt,name=Description,proto3" json:"Description,omitempty"`
	Key                  string   `protobuf:"bytes,2,opt,name=Key,proto3" json:"Key,omitempty"`
	Url                  string   `protobuf:"bytes,3,opt,name=Url,proto3" json:"Url,omitempty"`
	MaximumMergeDelay    int64    `protobuf:"varint,4,opt,name=MaximumMergeDelay,proto3" json:"MaximumMergeDelay,omitempty"`
	OperatedBy           []int64  `protobuf:"varint,5,rep,packed,name=OperatedBy,proto3" json:"OperatedBy,omitempty"`
	DnsApiEndpoint       string   `protobuf:"bytes,6,opt,name=DnsApiEndpoint,proto3" json:"DnsApiEndpoint,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Log) Reset()         { *m = Log{} }
func (m *Log) String() string { return proto.CompactTextString(m) }
func (*Log) ProtoMessage()    {}
func (*Log) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{5}
}

func (m *Log) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Log.Unmarshal(m, b)
}
func (m *Log) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Log.Marshal(b, m, deterministic)
}
func (m *Log) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Log.Merge(m, src)
}
func (m *Log) XXX_Size() int {
	return xxx_messageInfo_Log.Size(m)
}
func (m *Log) XXX_DiscardUnknown() {
	xxx_messageInfo_Log.DiscardUnknown(m)
}

var xxx_messageInfo_Log proto.InternalMessageInfo

func (m *Log) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *Log) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

func (m *Log) GetUrl() string {
	if m != nil {
		return m.Url
	}
	return ""
}

func (m *Log) GetMaximumMergeDelay() int64 {
	if m != nil {
		return m.MaximumMergeDelay
	}
	return 0
}

func (m *Log) GetOperatedBy() []int64 {
	if m != nil {
		return m.OperatedBy
	}
	return nil
}

func (m *Log) GetDnsApiEndpoint() string {
	if m != nil {
		return m.DnsApiEndpoint
	}
	return ""
}

type ZoneEntry struct {
	Apex                 string   `protobuf:"bytes,1,opt,name=Apex,proto3" json:"Apex,omitempty"`
	Timestamp            int64    `protobuf:"varint,2,opt,name=Timestamp,proto3" json:"Timestamp,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ZoneEntry) Reset()         { *m = ZoneEntry{} }
func (m *ZoneEntry) String() string { return proto.CompactTextString(m) }
func (*ZoneEntry) ProtoMessage()    {}
func (*ZoneEntry) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{6}
}

func (m *ZoneEntry) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ZoneEntry.Unmarshal(m, b)
}
func (m *ZoneEntry) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ZoneEntry.Marshal(b, m, deterministic)
}
func (m *ZoneEntry) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ZoneEntry.Merge(m, src)
}
func (m *ZoneEntry) XXX_Size() int {
	return xxx_messageInfo_ZoneEntry.Size(m)
}
func (m *ZoneEntry) XXX_DiscardUnknown() {
	xxx_messageInfo_ZoneEntry.DiscardUnknown(m)
}

var xxx_messageInfo_ZoneEntry proto.InternalMessageInfo

func (m *ZoneEntry) GetApex() string {
	if m != nil {
		return m.Apex
	}
	return ""
}

func (m *ZoneEntry) GetTimestamp() int64 {
	if m != nil {
		return m.Timestamp
	}
	return 0
}

func init() {
	proto.RegisterType((*Empty)(nil), "Empty")
	proto.RegisterType((*StartMeasurementResponse)(nil), "StartMeasurementResponse")
	proto.RegisterType((*Meta)(nil), "Meta")
	proto.RegisterType((*MeasurementId)(nil), "MeasurementId")
	proto.RegisterType((*LogEntry)(nil), "LogEntry")
	proto.RegisterType((*Log)(nil), "Log")
	proto.RegisterType((*ZoneEntry)(nil), "ZoneEntry")
}

func init() { proto.RegisterFile("api.proto", fileDescriptor_00212fb1f9d3bf1c) }

var fileDescriptor_00212fb1f9d3bf1c = []byte{
	// 448 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x8c, 0x53, 0x5d, 0x8b, 0xd3, 0x40,
	0x14, 0xdd, 0x36, 0x49, 0x35, 0xb7, 0x1a, 0xd7, 0x41, 0x24, 0x2e, 0xa2, 0x25, 0x60, 0x59, 0x50,
	0x22, 0xd4, 0x8f, 0x27, 0x7d, 0xa8, 0xdb, 0x8a, 0xc5, 0x16, 0x65, 0xaa, 0x2f, 0xbe, 0x8d, 0x9b,
	0x6b, 0x18, 0x68, 0x66, 0x86, 0xc9, 0x14, 0x9a, 0x9f, 0x27, 0xf8, 0xc3, 0x24, 0xb7, 0xd1, 0xa6,
	0x11, 0x75, 0xdf, 0x6e, 0xce, 0xbd, 0x67, 0xce, 0xdc, 0x93, 0x33, 0x10, 0x0a, 0x23, 0x53, 0x63,
	0xb5, 0xd3, 0xc9, 0x35, 0x08, 0xe6, 0x85, 0x71, 0x55, 0xf2, 0x11, 0xe2, 0xb5, 0x13, 0xd6, 0xad,
	0x50, 0x94, 0x5b, 0x8b, 0x05, 0x2a, 0xc7, 0xb1, 0x34, 0x5a, 0x95, 0xc8, 0x9e, 0xc3, 0xcd, 0x16,
	0xbc, 0xc8, 0xe2, 0xde, 0xa8, 0x77, 0x3e, 0x9c, 0x44, 0xe9, 0x11, 0xca, 0x8f, 0x87, 0x92, 0x57,
	0xe0, 0xaf, 0xd0, 0x09, 0x36, 0x82, 0xe1, 0x0c, 0xcb, 0x4b, 0x2b, 0x8d, 0x93, 0x5a, 0x11, 0x37,
	0xe4, 0x6d, 0x88, 0x31, 0xf0, 0xdf, 0xe9, 0xd2, 0xc5, 0x7d, 0x6a, 0x51, 0x9d, 0x3c, 0xec, 0x68,
	0xb2, 0x08, 0xfa, 0x8d, 0x72, 0xc8, 0xfb, 0x8b, 0x2c, 0xd9, 0xc1, 0xf5, 0xa5, 0xce, 0xe7, 0xca,
	0xd9, 0xaa, 0x96, 0xb8, 0x40, 0xeb, 0xe4, 0x37, 0x79, 0x29, 0x1c, 0xd2, 0xd0, 0x0d, 0xde, 0x86,
	0xd8, 0x1d, 0x08, 0x16, 0x2a, 0xc3, 0x1d, 0x69, 0x78, 0x7c, 0xff, 0xc1, 0xee, 0x43, 0xf8, 0x49,
	0x16, 0x58, 0x3a, 0x51, 0x98, 0xd8, 0xa3, 0xce, 0x01, 0x60, 0x77, 0xc1, 0x5b, 0xea, 0x3c, 0xf6,
	0x69, 0x59, 0x3f, 0x5d, 0xea, 0x9c, 0xd7, 0x40, 0xf2, 0xbd, 0x47, 0x8d, 0x2b, 0x2c, 0x76, 0x0a,
	0xde, 0x7b, 0xac, 0x9a, 0xbd, 0xea, 0xb2, 0x46, 0x3e, 0xdb, 0x0d, 0x69, 0x85, 0xbc, 0x2e, 0xd9,
	0x13, 0xb8, 0xbd, 0x12, 0x3b, 0x59, 0x6c, 0x8b, 0x15, 0xda, 0x1c, 0x67, 0xb8, 0x11, 0x15, 0x69,
	0x7a, 0xfc, 0xcf, 0x06, 0x7b, 0x00, 0xf0, 0xc1, 0xa0, 0x15, 0x0e, 0xb3, 0x37, 0x55, 0x1c, 0x8c,
	0xbc, 0x73, 0x8f, 0xb7, 0x10, 0x36, 0x86, 0x68, 0xa6, 0xca, 0xa9, 0x91, 0x73, 0x95, 0x19, 0x2d,
	0x95, 0x8b, 0x07, 0x24, 0xd5, 0x41, 0x93, 0xd7, 0x10, 0x7e, 0xd1, 0x0a, 0xf7, 0xf6, 0x31, 0xf0,
	0xa7, 0x06, 0x77, 0xcd, 0x06, 0x54, 0x1f, 0x5b, 0xd3, 0xef, 0x58, 0x33, 0xf9, 0xd1, 0x83, 0xa8,
	0xf5, 0x7b, 0xa6, 0x46, 0xb2, 0x97, 0x70, 0xda, 0x0d, 0x10, 0x0b, 0xd2, 0x3a, 0x01, 0x67, 0xf7,
	0xd2, 0xbf, 0x45, 0x2b, 0x39, 0x61, 0x8f, 0xe1, 0xd6, 0xda, 0x69, 0xd3, 0xa6, 0x75, 0x82, 0x75,
	0x36, 0x48, 0xf7, 0x19, 0x3d, 0x61, 0x63, 0x00, 0x3a, 0x6a, 0xed, 0x44, 0x8e, 0xff, 0x98, 0x7b,
	0x04, 0x61, 0x7d, 0xe8, 0x7f, 0xc6, 0x26, 0x4f, 0x21, 0xb8, 0xa0, 0xcb, 0x8f, 0xe9, 0x12, 0x16,
	0x9b, 0x44, 0x49, 0x2c, 0x59, 0x98, 0xfe, 0x8a, 0x57, 0x8b, 0xf0, 0x02, 0x86, 0xb5, 0x6d, 0x6f,
	0xe5, 0x06, 0xf7, 0xb4, 0x88, 0x68, 0x07, 0x2b, 0x21, 0xfd, 0x5d, 0x1f, 0x68, 0x5f, 0x07, 0xf4,
	0xd8, 0x9e, 0xfd, 0x0c, 0x00, 0x00, 0xff, 0xff, 0x3a, 0xe3, 0xcb, 0xd6, 0x79, 0x03, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// MeasurementApiClient is the client API for MeasurementApi service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type MeasurementApiClient interface {
	StartMeasurement(ctx context.Context, in *Meta, opts ...grpc.CallOption) (*StartMeasurementResponse, error)
	StopMeasurement(ctx context.Context, in *MeasurementId, opts ...grpc.CallOption) (*Empty, error)
	StartStage(ctx context.Context, in *MeasurementId, opts ...grpc.CallOption) (*Empty, error)
	StopStage(ctx context.Context, in *MeasurementId, opts ...grpc.CallOption) (*Empty, error)
}

type measurementApiClient struct {
	cc *grpc.ClientConn
}

func NewMeasurementApiClient(cc *grpc.ClientConn) MeasurementApiClient {
	return &measurementApiClient{cc}
}

func (c *measurementApiClient) StartMeasurement(ctx context.Context, in *Meta, opts ...grpc.CallOption) (*StartMeasurementResponse, error) {
	out := new(StartMeasurementResponse)
	err := c.cc.Invoke(ctx, "/MeasurementApi/StartMeasurement", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *measurementApiClient) StopMeasurement(ctx context.Context, in *MeasurementId, opts ...grpc.CallOption) (*Empty, error) {
	out := new(Empty)
	err := c.cc.Invoke(ctx, "/MeasurementApi/StopMeasurement", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *measurementApiClient) StartStage(ctx context.Context, in *MeasurementId, opts ...grpc.CallOption) (*Empty, error) {
	out := new(Empty)
	err := c.cc.Invoke(ctx, "/MeasurementApi/StartStage", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *measurementApiClient) StopStage(ctx context.Context, in *MeasurementId, opts ...grpc.CallOption) (*Empty, error) {
	out := new(Empty)
	err := c.cc.Invoke(ctx, "/MeasurementApi/StopStage", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// MeasurementApiServer is the server API for MeasurementApi service.
type MeasurementApiServer interface {
	StartMeasurement(context.Context, *Meta) (*StartMeasurementResponse, error)
	StopMeasurement(context.Context, *MeasurementId) (*Empty, error)
	StartStage(context.Context, *MeasurementId) (*Empty, error)
	StopStage(context.Context, *MeasurementId) (*Empty, error)
}

func RegisterMeasurementApiServer(s *grpc.Server, srv MeasurementApiServer) {
	s.RegisterService(&_MeasurementApi_serviceDesc, srv)
}

func _MeasurementApi_StartMeasurement_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Meta)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MeasurementApiServer).StartMeasurement(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/MeasurementApi/StartMeasurement",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MeasurementApiServer).StartMeasurement(ctx, req.(*Meta))
	}
	return interceptor(ctx, in, info, handler)
}

func _MeasurementApi_StopMeasurement_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MeasurementId)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MeasurementApiServer).StopMeasurement(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/MeasurementApi/StopMeasurement",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MeasurementApiServer).StopMeasurement(ctx, req.(*MeasurementId))
	}
	return interceptor(ctx, in, info, handler)
}

func _MeasurementApi_StartStage_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MeasurementId)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MeasurementApiServer).StartStage(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/MeasurementApi/StartStage",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MeasurementApiServer).StartStage(ctx, req.(*MeasurementId))
	}
	return interceptor(ctx, in, info, handler)
}

func _MeasurementApi_StopStage_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MeasurementId)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MeasurementApiServer).StopStage(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/MeasurementApi/StopStage",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MeasurementApiServer).StopStage(ctx, req.(*MeasurementId))
	}
	return interceptor(ctx, in, info, handler)
}

var _MeasurementApi_serviceDesc = grpc.ServiceDesc{
	ServiceName: "MeasurementApi",
	HandlerType: (*MeasurementApiServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "StartMeasurement",
			Handler:    _MeasurementApi_StartMeasurement_Handler,
		},
		{
			MethodName: "StopMeasurement",
			Handler:    _MeasurementApi_StopMeasurement_Handler,
		},
		{
			MethodName: "StartStage",
			Handler:    _MeasurementApi_StartStage_Handler,
		},
		{
			MethodName: "StopStage",
			Handler:    _MeasurementApi_StopStage_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "api.proto",
}

// CtApiClient is the client API for CtApi service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type CtApiClient interface {
	StoreLogEntries(ctx context.Context, in *LogEntry, opts ...grpc.CallOption) (*Empty, error)
}

type ctApiClient struct {
	cc *grpc.ClientConn
}

func NewCtApiClient(cc *grpc.ClientConn) CtApiClient {
	return &ctApiClient{cc}
}

func (c *ctApiClient) StoreLogEntries(ctx context.Context, in *LogEntry, opts ...grpc.CallOption) (*Empty, error) {
	out := new(Empty)
	err := c.cc.Invoke(ctx, "/CtApi/StoreLogEntries", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// CtApiServer is the server API for CtApi service.
type CtApiServer interface {
	StoreLogEntries(context.Context, *LogEntry) (*Empty, error)
}

func RegisterCtApiServer(s *grpc.Server, srv CtApiServer) {
	s.RegisterService(&_CtApi_serviceDesc, srv)
}

func _CtApi_StoreLogEntries_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(LogEntry)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CtApiServer).StoreLogEntries(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/CtApi/StoreLogEntries",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CtApiServer).StoreLogEntries(ctx, req.(*LogEntry))
	}
	return interceptor(ctx, in, info, handler)
}

var _CtApi_serviceDesc = grpc.ServiceDesc{
	ServiceName: "CtApi",
	HandlerType: (*CtApiServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "StoreLogEntries",
			Handler:    _CtApi_StoreLogEntries_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "api.proto",
}

// ZoneFileApiClient is the client API for ZoneFileApi service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ZoneFileApiClient interface {
	StoreZoneEntry(ctx context.Context, in *ZoneEntry, opts ...grpc.CallOption) (*Empty, error)
}

type zoneFileApiClient struct {
	cc *grpc.ClientConn
}

func NewZoneFileApiClient(cc *grpc.ClientConn) ZoneFileApiClient {
	return &zoneFileApiClient{cc}
}

func (c *zoneFileApiClient) StoreZoneEntry(ctx context.Context, in *ZoneEntry, opts ...grpc.CallOption) (*Empty, error) {
	out := new(Empty)
	err := c.cc.Invoke(ctx, "/ZoneFileApi/StoreZoneEntry", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ZoneFileApiServer is the server API for ZoneFileApi service.
type ZoneFileApiServer interface {
	StoreZoneEntry(context.Context, *ZoneEntry) (*Empty, error)
}

func RegisterZoneFileApiServer(s *grpc.Server, srv ZoneFileApiServer) {
	s.RegisterService(&_ZoneFileApi_serviceDesc, srv)
}

func _ZoneFileApi_StoreZoneEntry_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ZoneEntry)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ZoneFileApiServer).StoreZoneEntry(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ZoneFileApi/StoreZoneEntry",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ZoneFileApiServer).StoreZoneEntry(ctx, req.(*ZoneEntry))
	}
	return interceptor(ctx, in, info, handler)
}

var _ZoneFileApi_serviceDesc = grpc.ServiceDesc{
	ServiceName: "ZoneFileApi",
	HandlerType: (*ZoneFileApiServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "StoreZoneEntry",
			Handler:    _ZoneFileApi_StoreZoneEntry_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "api.proto",
}
